"""empty message

Revision ID: b679e5d2469f
Revises: 
Create Date: 2025-02-17 01:11:00.648793

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b679e5d2469f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('constant',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('document',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('document_path', sa.String(length=150), nullable=True),
    sa.Column('document_type_id', sa.Integer(), nullable=True),
    sa.Column('document_size', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['document_type_id'], ['constant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phone_number', sa.String(length=15), nullable=False),
    sa.Column('password', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('display_name', sa.String(length=50), nullable=True),
    sa.Column('profile_picture', sa.String(length=150), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('login_status_id', sa.Integer(), nullable=True),
    sa.Column('theme_id', sa.Integer(), nullable=True),
    sa.Column('last_opene_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_on', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['login_status_id'], ['constant.id'], ),
    sa.ForeignKeyConstraint(['theme_id'], ['constant.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('chat',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chat_type_id', sa.Integer(), nullable=True),
    sa.Column('chat_name', sa.String(length=50), nullable=True),
    sa.Column('admin_user_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['admin_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['chat_type_id'], ['constant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_user_map',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chat.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('thread',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('message_timestamp', sa.TIMESTAMP(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('message_type_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('thread_id', sa.Integer(), nullable=True),
    sa.Column('reference_message_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chat.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['message_type_id'], ['constant.id'], ),
    sa.ForeignKeyConstraint(['reference_message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['constant.id'], ),
    sa.ForeignKeyConstraint(['thread_id'], ['thread.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message_seen_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('sent_status_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['sent_status_id'], ['constant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(length=90), nullable=True),
    sa.Column('reacted_by_id', sa.Integer(), nullable=True),
    sa.Column('reacted_on', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['reacted_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reaction')
    op.drop_table('message_seen_status')
    op.drop_table('message')
    op.drop_table('thread')
    op.drop_table('chat_user_map')
    op.drop_table('chat')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_table('document')
    op.drop_table('constant')
    op.drop_table('group')
    # ### end Alembic commands ###
